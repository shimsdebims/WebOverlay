// Generated by view binder compiler. Do not edit!
package com.example.weboverlay.databinding;

import android.view.LayoutInflater;
import android.view.TextureView;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.weboverlay.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OverlayLayoutBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextureView cameraTextureView;

  @NonNull
  public final View overlayBackground;

  @NonNull
  public final TextView overlayStatus;

  @NonNull
  public final WebView overlayWebview;

  private OverlayLayoutBinding(@NonNull FrameLayout rootView,
      @NonNull TextureView cameraTextureView, @NonNull View overlayBackground,
      @NonNull TextView overlayStatus, @NonNull WebView overlayWebview) {
    this.rootView = rootView;
    this.cameraTextureView = cameraTextureView;
    this.overlayBackground = overlayBackground;
    this.overlayStatus = overlayStatus;
    this.overlayWebview = overlayWebview;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OverlayLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OverlayLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.overlay_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OverlayLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera_texture_view;
      TextureView cameraTextureView = ViewBindings.findChildViewById(rootView, id);
      if (cameraTextureView == null) {
        break missingId;
      }

      id = R.id.overlay_background;
      View overlayBackground = ViewBindings.findChildViewById(rootView, id);
      if (overlayBackground == null) {
        break missingId;
      }

      id = R.id.overlay_status;
      TextView overlayStatus = ViewBindings.findChildViewById(rootView, id);
      if (overlayStatus == null) {
        break missingId;
      }

      id = R.id.overlay_webview;
      WebView overlayWebview = ViewBindings.findChildViewById(rootView, id);
      if (overlayWebview == null) {
        break missingId;
      }

      return new OverlayLayoutBinding((FrameLayout) rootView, cameraTextureView, overlayBackground,
          overlayStatus, overlayWebview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
